using Gtk 4.0;
using Adw 1;

template $DraughtsWindow : Adw.ApplicationWindow {
  // Mobile breakpoint for narrow screens
  Adw.Breakpoint {
    condition ("max-width: 550px")

    setters {
      // On narrow screens, hide less important bottom bar elements
      navigation_buttons.visible: false;
      board_container.margin-start: 6;
      board_container.margin-end: 6;
      board_container.margin-top: 6;
      board_container.margin-bottom: 6;
    }
  }

  Gtk.Box {
    orientation: vertical;

    Adw.HeaderBar header_bar {
      title-widget: Adw.WindowTitle window_title {
        title: _("Draughts");
        subtitle: _("American Checkers");
      };

      [start]
      Gtk.Button undo_button {
        icon-name: "io.github.tobagin.Draughts-undo-symbolic";
        tooltip-text: _("Undo Move");
      }

      [start]
      Gtk.Button pause_button {
        icon-name: "media-playback-pause-symbolic";
        tooltip-text: _("Pause Game");
      }

      [start]
      Gtk.Button disconnect_button {
        icon-name: "network-offline-symbolic";
        tooltip-text: _("Disconnect from Multiplayer Game");
        visible: false;
      }

      [end]
      Gtk.MenuButton menu_button {
        icon-name: "open-menu-symbolic";
        tooltip-text: _("Main Menu");
        menu-model: primary_menu;
      }
    }

    Adw.ToastOverlay toast_overlay {
      vexpand: true;

      child: Gtk.Overlay game_overlay {
        vexpand: true;
        hexpand: true;

        [overlay]
        Gtk.Box pause_overlay {
          orientation: vertical;
          halign: fill;
          valign: fill;
          hexpand: true;
          vexpand: true;
          visible: false;

          styles ["pause-overlay"]

          Gtk.Box {
            orientation: vertical;
            valign: center;
            halign: center;
            vexpand: true;
            hexpand: true;
            spacing: 16;

            Gtk.Label paused_label {
              label: _("Paused");
              halign: center;
              valign: center;
              styles ["paused-text"]
            }

            Gtk.Label {
              label: _("Press Play to resume");
              halign: center;
              styles ["pause-subtitle"]
            }
          }
        }

        [overlay]
        Gtk.Box disconnect_overlay {
          orientation: vertical;
          halign: fill;
          valign: fill;
          hexpand: true;
          vexpand: true;
          visible: false;

          styles ["pause-overlay"]

          Gtk.Box {
            orientation: vertical;
            valign: center;
            halign: center;
            vexpand: true;
            hexpand: true;
            spacing: 16;

            Gtk.Label disconnect_label {
              label: _("Opponent Disconnected");
              halign: center;
              valign: center;
              styles ["paused-text"]
            }

            Gtk.Label disconnect_message {
              label: _("Waiting for reconnection...");
              halign: center;
              styles ["pause-subtitle"]
            }

            Gtk.Label disconnect_countdown {
              label: "30";
              halign: center;
              styles ["disconnect-countdown"]
            }
          }
        }

        Gtk.Box board_container {
          orientation: vertical;
          spacing: 12;
          margin-top: 12;
          margin-bottom: 12;
          margin-start: 12;
          margin-end: 12;
          halign: fill;
          valign: fill;
          hexpand: true;
          vexpand: true;

        }
      };
    }

    Adw.HeaderBar bottom_bar {
      show-end-title-buttons: false;

      [start]
      Gtk.Box navigation_buttons {
        orientation: horizontal;
        spacing: 0;
        halign: end;
        hexpand: true;

        styles ["linked"]

        Gtk.Button first_move_button {
          icon-name: "go-first-symbolic";
          tooltip-text: _("First Move");
          valign: fill;
          halign: fill;
        }

        Gtk.Button prev_move_button {
          icon-name: "go-previous-symbolic";
          tooltip-text: _("Previous Move");
          valign: fill;
          halign: fill;
        }

        Gtk.Button next_move_button {
          icon-name: "go-next-symbolic";
          tooltip-text: _("Next Move");
          valign: fill;
          halign: fill;
        }

        Gtk.Button last_move_button {
          icon-name: "go-last-symbolic";
          tooltip-text: _("Last Move");
          valign: fill;
          halign: fill;
        }
      }

      title-widget: Gtk.DropDown move_history_dropdown {
        model: move_history_model;
        enable-search: false;
        tooltip-text: _("Navigate to move");
        hexpand: true;
      };

      [end]
      Gtk.Box timer_box {
        orientation: horizontal;
        spacing: 12;
        halign: end;

        Gtk.Label red_timer_display {
          label: "5:00";
          styles ["timer-display", "timer-red"]
        }

        Gtk.Label black_timer_display {
          label: "5:00";
          styles ["timer-display", "timer-black"]
        }
      }
    }
  }
}

Gtk.StringList move_history_model {
  strings [_("Game Start")]
}

menu primary_menu {
  section {
    item {
      label: _("_New Game");
      action: "app.new-game";
      accel: "<primary>n";
    }

    item {
      label: _("Play _Online");
      action: "app.play-online";
      accel: "<primary>m";
    }

    item {
      label: _("_Reset Game");
      action: "app.reset-game";
      accel: "<primary>r";
    }
  }
  section {
    item {
      label: _("Game _History");
      action: "win.show-history";
      accel: "<primary>h";
    }
  }


  section {
    item {
      label: _("_Preferences");
      action: "app.preferences";
      accel: "<primary>comma";
    }
  }

  section {
    item {
      label: _("_Help");
      action: "app.help";
      accel: "F1";
    }

    item {
      label: _("_Keyboard Shortcuts");
      action: "win.show-help-overlay";
      accel: "<primary>question";
    }

    item {
      label: _("_About Draughts");
      action: "app.about";
    }
  }

  section {
    item {
      label: _("_Quit");
      action: "app.quit";
      accel: "<primary>q";
    }
  }
}